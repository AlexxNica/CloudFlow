// Copyright (C) 2017 Nokia

@import "../../../styles/colors";

$WF-shadow: 3px -3px #c0c0c0;
$selected-shadow: 0 4px 8px 0px rgba(0, 0, 0, .35);

#graph-container {
  position: relative;
}

.task {
  width: 165px;
  height: 65px;
  border: 1px solid $border;
  background-color: #fff;
  position: absolute;
  border-radius: 4px;
  transition: border-color .2s ease-in-out, box-shadow .25s ease-in-out;
  //will-change: border-color, box-shadow;

  .task-content {
    padding: .5rem;
    transition: filter .2s ease-in-out, opacity .2s ease-in-out, background-color .2s ease-in-out;
    //will-change: filter, opacity, background-color;
  }

  .task-name {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    line-height: 1.6;
  }
}

.task.inPath__false .task-content {
  filter: grayscale(1);
  opacity: .4;
  background-color: #C2C2C2;
}

.task.WORKFLOW {
  box-shadow: $WF-shadow;
}

.task.selected {
  border-width: 2px;
  box-shadow: $selected-shadow;
  outline: none;

  .task-name {
    font-weight: 600;
  }
}

.task.WORKFLOW.selected {
  // workaround for box-shadow override
  box-shadow: $selected-shadow, $WF-shadow;
}

$state-colors: (SUCCESS: $entity-success, ERROR: $entity-error, COMPLETE: $entity-completed);

// set hover color on tasks
@each $state, $color in $state-colors {
  .task.#{$state}:hover {
    border-color: $color;
  }
}

// set selected task style
@each $state, $color in $state-colors {
  .task.#{$state}.selected {
    border-color: $color;
  }
}

// edges colors - currently disabled due to https://github.com/jsplumb/jsPlumb/issues/647
@each $state, $color in $state-colors {
  /deep/svg.jtk-connector.edge-#{$state} path {
    stroke: $color;
    stroke-width: 2px;
  }
}

/deep/.jtk-overlay.edge-overlay {
  padding: 2px 5px;
  font-size: 10px;
  color: #fff;
  border-radius: 3px;
  opacity: 1;
  transition: opacity .2s ease-in-out;

  &:not(.inPath) {
    //opacity: 0;
    filter: grayscale(1) brightness(1.8);
  }
}

// edge overlays (label)
@each $state, $color in $state-colors {
  /deep/.jtk-overlay.edge-overlay.#{$state} {
    background-color: $color;
  }
}
